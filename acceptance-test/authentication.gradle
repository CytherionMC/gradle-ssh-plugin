
remotes {
    dedicatedIdentity {
        host = 'localhost'
        user = "user${randomInt()}n"
        identity = file("${System.getProperty('user.home')}/.ssh/id_rsa_pass")
        passphrase = 'pass_phrase'
    }
    usingAgent {
        host = 'localhost'
        user = System.getProperty('user.name')
        agent = true
    }
}


task('should authenticate with remote specific identity', dependsOn: sideEffect) {
    dependsOn   'createUserWithAuthorizedKey'
    finalizedBy 'deleteUserWithAuthorizedKey'
    doLast {
        assert ssh.run {
            session(remotes.dedicatedIdentity) {
                execute 'whoami'
            }
        } == remotes.dedicatedIdentity.user
    }
}

task createUserWithAuthorizedKey {
    finalizedBy 'deleteUserWithAuthorizedKey'
    doLast {
        ssh.run {
            session(remotes.localhost) {
                def username = remotes.dedicatedIdentity.user
                execute "sudo useradd -m $username"
                execute "sudo -u $username mkdir ~$username/.ssh"
                execute "sudo -u $username tee ~$username/.ssh/authorized_keys < ~/.ssh/id_rsa_pass.pub"
            }
        }
    }
}

task deleteUserWithAuthorizedKey << {
    ssh.run {
        session(remotes.localhost) {
            def username = remotes.dedicatedIdentity.user
            execute "sudo userdel -r $username"
        }
    }
}

task('should authenticate with the ssh agent', dependsOn: sshAgent) << {
    def x = randomInt()
    def y = randomInt()
    assert ssh.run {
        session(remotes.usingAgent) {
            execute "expr $x + $y"
        }
    } as int == (x + y)
}
