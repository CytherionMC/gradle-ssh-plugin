
task('should execute the shell') << {
    ssh.run {
        session(remotes.testServer) {
            shell(interaction: {
                when(partial: ~/.*[$%#]\W*/, from: standardOutput) {
                    standardInput << 'uname -a' << '\n'

                    when(partial: ~/.*[$%#]\W*/, from: standardOutput) {
                        standardInput << 'exit 0' << '\n'
                    }
                    when(line: _, from: standardOutput) {}
                }
                when(line: _, from: standardOutput) {}
            })
        }
    }
}

task('should write output of the shell to the file') << {
    def x = randomInt()
    def y = randomInt()
    localWorkDir.mkdirs()
    def resultFile = file("$localWorkDir/result")
    resultFile.withOutputStream { stream ->
        ssh.run {
            session(remotes.testServer) {
                execute "expr $x + $y", outputStream: stream
            }
        }
    }
    assert resultFile.text as int == (x + y)
}

task('should write output of the shell to the standard output') << {
    ssh.run {
        session(remotes.testServer) {
            shell outputStream: System.out, interaction: {
                when(partial: ~/.*[$%#]\W*/, from: standardOutput) {
                    standardInput << 'uname -a' << '\n'

                    when(partial: ~/.*[$%#]\W*/, from: standardOutput) {
                        standardInput << 'exit 0' << '\n'
                    }
                    when(line: _, from: standardOutput) {}
                }
                when(line: _, from: standardOutput) {}
            }
        }
    }
}
