import static java.lang.System.getProperty
import static java.lang.System.getenv

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        if (gradle.gradleVersion.startsWith('1.')) {
            classpath 'org.codehaus.groovy:groovy-backports-compat23:2.3.6'
        }
        classpath "org.hidetake:gradle-ssh-plugin:${property('target.product.version')}"
    }
}

apply plugin: 'org.hidetake.ssh'

remotes {
    testServer {
        role 'testServers'
        host = 'localhost'
        port = getenv('DOCKER_SSH_PORT') as Integer ?: 22
        user = getenv('DOCKER_SSH_USER') ?: getProperty('user.name')
        identity = file("$buildDir/.ssh/id_rsa")
        knownHosts = addHostKey(file("$buildDir/.ssh/known_hosts"))
    }
}

ext.localWorkDirBase = file("$buildDir/tmp")
ext.remoteWorkDirBase = '/tmp/gradle-ssh-plugin.acceptance-test'

task setup {
    doLast {
        println "Gradle: ${gradle.gradleVersion}"
        println "Java: ${getProperty('java.home')}"
        println "Target: ${ssh.version}"
        delete localWorkDirBase
        localWorkDirBase.mkdirs()
        ssh.run {
            session(remotes.testServer) {
                remove remoteWorkDirBase
                execute "mkdir -vp $remoteWorkDirBase"
            }
        }
    }
}

task cleanup {
    doLast {
        delete localWorkDirBase
        ssh.run {
            session(remotes.testServer) {
                remove remoteWorkDirBase
            }
        }
    }
}
