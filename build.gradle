buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
    }
}

apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'ivy-publish'
apply plugin: 'com.jfrog.bintray'

repositories {
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile('org.hidetake:groovy-ssh:0.1.1') {
        exclude module: 'groovy-all'
    }
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile 'org.apache.sshd:sshd-core:0.9.0'
}

test {
    useJUnit {
        excludeCategories 'org.hidetake.gradle.ssh.server.ServerIntegrationTest'
    }
}

task serverIntegrationTest(type: Test) {
    useJUnit {
        includeCategories 'org.hidetake.gradle.ssh.server.ServerIntegrationTest'
    }
    reports {
        html.destination = file("$buildDir/reports/server-integration-tests")
    }
}

jacoco {
    toolVersion = '0.7.1.201405082137'
}

task jacocoServerIntegrationTestReport(type: JacocoReport) {
    executionData serverIntegrationTest
    sourceSets sourceSets.main
    reports.html.destination "$buildDir/reports/jacoco/server-integration-tests"
}

check.dependsOn serverIntegrationTest
check.dependsOn jacocoTestReport
check.dependsOn jacocoServerIntegrationTestReport

if (System.getProperty('os.name') == 'Linux') {
    tasks.withType(JavaForkOptions) {
        systemProperty 'java.security.egd', 'file:/dev/./urandom'
    }
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    from "${buildDir}/docs/groovydoc"
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
        ivy(IvyPublication) {
            from components.java
        }
    }
    repositories {
        ivy {
            url ivyRepository
        }
    }
}

bintray {
    user = project.properties.bintrayUser
    key = project.properties.bintrayKey
    publications = ['maven']
    pkg {
        repo = 'maven'
        name = project.name
        version {
            attributes = ['gradle-plugin': 'org.hidetake.ssh:org.hidetake:gradle-ssh-plugin']
        }
    }
}

tasks.bintrayUpload.doFirst {
    assert !project.version.contains('SNAPSHOT')
}

task install(dependsOn: 'publishIvyPublicationToIvyRepository') {
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

task archiveDependencies(type: Zip, dependsOn: jar) {
    classifier = 'all'
    into('dep-libs') {
        from configurations.runtime
        from 'build/libs'
    }
}
